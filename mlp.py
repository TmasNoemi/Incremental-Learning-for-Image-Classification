# -*- coding: utf-8 -*-
"""MLP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CmpXndjhNZP3xW_lfoA4JredZLX6lUSS
"""

import torch
import torch.nn as nn

class MLP(nn.Module):
    def __init__(self,n_classes, dropout=0.2):
        super().__init__()
        self.model = nn.Sequential(
            nn.Dropout(dropout),
            nn.Linear(64, 82),
            nn.ReLU(),
            nn.Dropout(dropout),            
            nn.Linear(82, 82),
            nn.ReLU(),
            nn.Dropout(dropout),
            nn.Linear(82, n_classes),
        )
        for m in self.model:
            if isinstance(m, nn.Linear):
                nn.init.kaiming_normal_(m.weight)
                nn.init.constant_(m.bias, 0)

    def forward(self, input_tensor):
        return self.model(input_tensor)